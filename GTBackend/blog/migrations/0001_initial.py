# Generated by Django 4.1.1 on 2023-01-12 23:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("manufacturer", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="TuningSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=250)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="car_photos"),
                ),
                ("excerpt", models.TextField(null=True)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=250, unique_for_date="published"
                    ),
                ),
                ("published", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "status",
                    models.CharField(
                        choices=[("Draft", "Draft"), ("Published", "Published")],
                        default="Published",
                        max_length=10,
                    ),
                ),
                (
                    "performance_points",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "tyres_front",
                    models.CharField(
                        choices=[
                            ("Comfort: Hard (CH)", "Comfort: Hard (CH)"),
                            ("Comfort: Medium (CM)", "Comfort: Medium (CM)"),
                            ("Comfort: Soft (CS)", "Comfort: Soft (CS)"),
                            ("Sports: Hard (SH)", "Sports: Hard (SH)"),
                            ("Sports: Medium (SM)", "Sports: Medium (SM)"),
                            ("Sports: Soft (SS)", "Sports: Soft (SS)"),
                            ("Racing: Hard (RH)", "Racing: Hard (RH)"),
                            ("Racing: Medium (RM)", "Racing: Medium (RM)"),
                            ("Racing: Soft (RS)", "Racing: Soft (RS)"),
                            ("Racing: Intermediate", "Racing: Intermediate"),
                            ("Racing: Heavy Wet", "Racing: Heavy Wet"),
                            ("Dirt", "Dirt"),
                        ],
                        default="Comfort: Hard (CH)",
                        max_length=25,
                    ),
                ),
                (
                    "tyres_rear",
                    models.CharField(
                        choices=[
                            ("Comfort: Hard (CH)", "Comfort: Hard (CH)"),
                            ("Comfort: Medium (CM)", "Comfort: Medium (CM)"),
                            ("Comfort: Soft (CS)", "Comfort: Soft (CS)"),
                            ("Sports: Hard (SH)", "Sports: Hard (SH)"),
                            ("Sports: Medium (SM)", "Sports: Medium (SM)"),
                            ("Sports: Soft (SS)", "Sports: Soft (SS)"),
                            ("Racing: Hard (RH)", "Racing: Hard (RH)"),
                            ("Racing: Medium (RM)", "Racing: Medium (RM)"),
                            ("Racing: Soft (RS)", "Racing: Soft (RS)"),
                            ("Racing: Intermediate", "Racing: Intermediate"),
                            ("Racing: Heavy Wet", "Racing: Heavy Wet"),
                            ("Dirt", "Dirt"),
                        ],
                        default="Comfort: Hard (CH)",
                        max_length=25,
                    ),
                ),
                (
                    "suspension",
                    models.CharField(
                        choices=[
                            ("Normal", "Normal"),
                            ("Sports Suspension", "Sports Suspension"),
                            ("Height-Adjustable Sports", "Height-Adjustable Sports"),
                            (
                                "Fully Customized Suspension",
                                "Fully Customized Suspension",
                            ),
                        ],
                        default="Normal",
                        max_length=50,
                    ),
                ),
                (
                    "height_front",
                    models.IntegerField(help_text="Front Body Height in mm"),
                ),
                (
                    "height_rear",
                    models.IntegerField(help_text="Rear Body Height in mm"),
                ),
                ("anti_roll_bar_front", models.IntegerField()),
                ("anti_roll_bar_rear", models.IntegerField()),
                ("compression_front", models.IntegerField()),
                ("compression_rear", models.IntegerField()),
                ("expansion_front", models.IntegerField()),
                ("expansion_rear", models.IntegerField()),
                (
                    "natural_frequency_front",
                    models.DecimalField(decimal_places=2, max_digits=4),
                ),
                (
                    "natural_frequency_rear",
                    models.DecimalField(decimal_places=2, max_digits=4),
                ),
                (
                    "camber_front",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="front negative camber",
                        max_digits=3,
                    ),
                ),
                (
                    "camber_rear",
                    models.DecimalField(
                        decimal_places=1, help_text="rear negative camber", max_digits=3
                    ),
                ),
                ("toe_front", models.DecimalField(decimal_places=2, max_digits=3)),
                ("toe_rear", models.DecimalField(decimal_places=2, max_digits=3)),
                (
                    "differential",
                    models.CharField(
                        choices=[
                            ("Normal", "Normal"),
                            ("One-Way LSD", "One-Way LSD"),
                            ("Two-Way LSD", "Two-Way LSD"),
                            ("Fully Customized", "Fully Customized"),
                        ],
                        default="Normal",
                        max_length=30,
                    ),
                ),
                ("initial_torque_front", models.IntegerField()),
                ("initial_torque_rear", models.IntegerField()),
                ("accel_sensitivity_front", models.IntegerField()),
                ("accel_sensitivity_rear", models.IntegerField()),
                ("braking_sensitivity_front", models.IntegerField()),
                ("braking_sensitivity_rear", models.IntegerField()),
                ("tvc_differential", models.BooleanField()),
                ("front_rear_torque_distribution", models.CharField(max_length=10)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tuning_sheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "car",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="blog.car",
                    ),
                ),
            ],
            options={"ordering": ("-published",),},
        ),
    ]
